version: '3.8'

services:
  trading-bot:
    build: .
    container_name: trading-bot
    ports:
      - "8000:8000"  # FastAPI 포트
      - "9090:9090"  # Prometheus 익스포터 포트
    volumes:
      - ./app:/app
      - ./logs:/logs
      - ./reports:/reports
    restart: unless-stopped
    environment:
      - LOG_LEVEL=INFO
      - DEFAULT_STRATEGY=ENVELOPE

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"  # 프로메테우스 웹 UI
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'  # 설정 리로드 지원
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana 웹 UI
    volumes:
      - grafana-data:/var/lib/grafana
      - ./dashboards:/etc/grafana/provisioning/dashboards
      - ./datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # 초기 관리자 비밀번호
      - GF_USERS_ALLOW_SIGN_UP=false      # 회원가입 비활성화
      - GF_INSTALL_PLUGINS=grafana-piechart-panel  # 추가 플러그인 설치

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped

volumes:
  prometheus-data:
  grafana-data: