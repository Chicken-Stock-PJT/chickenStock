server {
    listen 80;
    server_name k12a106.o.ssafy.io;
    return 301 https://$host$request_uri;  
}

server {
    listen 443 ssl;
    server_name k12a106.o.ssafy.io;

    ssl_certificate /etc/letsencrypt/live/k12a106.o.ssafy.io/fullchain.pem;  
    ssl_certificate_key /etc/letsencrypt/live/k12a106.o.ssafy.io/privkey.pem;  

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    location / {
        proxy_pass http://127.0.0.1:5173;  

        proxy_ssl_verify off;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /api/ {
        proxy_pass http://backend_servers;  # 백엔드 서버 그룹으로 요청 전달
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

upstream backend_servers {
    server 127.0.0.1:8084;  # 확인 필요: docker-compose.yml에서 BACKEND1_PORT 값과 일치하는지 확인
    server 127.0.0.1:8082;  # 확인 필요: docker-compose.yml에서 BACKEND2_PORT 값과 일치하는지 확인
    server 127.0.0.1:8083;  # 확인 필요: docker-compose.yml에서 BACKEND3_PORT 값과 일치하는지 확인
}